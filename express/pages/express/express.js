const catArr=[
  // 尾巴
  {
      ss: "#33190c",
  fs: "#ffffd9",
  lw: 6,
  type: 'fs',
  m: [433, 458],
  l0: [477, 438],
  b: [492, 433, 496, 453, 484, 463],
  l1: [433, 494]
  },
  // 身体
  {
      type:'fcs',
      m:[255,392],
      l0:[255,526],
      b0:[256,555,282,557,293,530],
      l1:[383,530],
      b1:[392,557,419,558,428,526],
      q0:[434,523,430,393]
  },
  // 肚白
  {
      fs:"#fff",
      type:'f',
      m:[317,501],
      q0:[345,504,363,500],
      q1:[386,492,389,480],
      q2:[393,469,396,437]
  },
  // 肚蓝
  {
      fs:"#e5f8ef",
      type:'f',
      m:[428,459],
      b0:[407,456,405,479,421,482],
      b1:[393,482,394,507,427,511],
      q0:[429,485,428,459]
  },
  // 左边耳朵
  {
      ss: "#33190c",
  fs: "#ffffd9",
  lw: 4,
  type: 'fs',
  m: [106,79],
  q: [114,4,209,14]
  },
  // 右耳
  {
      lw:5,
      type:'fs',
      m:[376,14],
      q0:[431,13,446,15],
      q1:[488,20,498,48],
      q2:[508,75,512,110]
  },
  {
      lw:8,
      type:'s',
      m:[470,65],
      l:[483,27]
  },
  {
      fs:"#fecce5",
      type:'f',
      m:[473,65],
      l:[483,30],
      b:[502,46,496,60,512,110]
  },
  // 头
  {
      ss: "#33190c",
  fs: "#ffffd9",
  lw: 10,
  type: 'fcs',
  m: [280, 6],
  b0: [476, 0, 535, 154, 541, 166],
      l: [546, 180],
      b1:[584, 304, 530, 368, 432, 392],
      q0:[210, 460, 90, 372],
      q1:[38, 324, 34, 314],
      q2:[1, 268, 38, 174],
      q3:[128, 8, 280, 6]
  },
  // 脸白
  {
      fs:"#fff",
      type:'f',
      m:[29, 294],
      q0:[57, 339, 99, 371],
      q1:[272, 404, 427, 390],
      b0:[500, 371, 567, 330, 549, 216],
      b1:[560, 298, 518, 360, 427, 378],
      q2:[272, 404, 99, 364],
      q4:[55, 334, 29, 294]
  },
  // 胡须 左
  {
      ss:'#33190c',
      lw:7,
      type:'s',
      m:[6, 212],
      l:[23, 212]
  },
  {
      type:'s',
      m:[7, 211],
      q:[5, 212, 7, 213] 
  },
  {
      type:'s',
      m:[2, 246],
      l:[15, 246] 
  },
  {
      type:'s',
      m:[6, 245],
      q:[1, 246, 6, 247] 
  },
  {
      type:'s',
      m:[6, 284],
      l:[17, 281] 
  },
  {
      type:'s',
      m:[9, 282],
      q:[4, 287, 6, 282] 
  },
  // 胡须 右
  {
      lw:6,
      type:'s',
      m:[529, 233],
      l:[596, 246]
  },
  {
      type:'s',
      m:[530, 233],
      q:[528, 233, 530, 234] 
  },
  {
      type:'s',
      m:[596, 246],
      q:[597, 246, 596, 246] 
  },
  {
      type:'s',
      m:[525, 263],
      l:[587, 290]
  },
  {
      type:'s',
      m:[526, 263],
      q:[524, 263, 527, 264] 
  },
  {
      type:'s',
      m:[587, 290],
      q:[589, 291, 587, 290] 
  },
  {
      type:'s',
      m:[523, 296],
      l:[581, 331]
  },
  {
      type:'s',
      m:[524, 298],
      q:[522, 294, 524, 297] 
  },
  {
      type:'s',
      m:[581, 331],
      q:[583, 332, 581, 331] 
  },
  // 眉毛
  {
      lw:5,
      type:'s',
      m0:[163, 40],
      l:[182, 42],
      m1:[182, 42],
      q:[185, 42, 180, 42] 
  },
  {
      type:'s',
      m0:[374, 54],
      q0:[386, 43, 396, 57],
      m1:[375, 54],
      q1:[372, 56, 376, 53],
      m2:[395, 56],
      q2:[397, 58, 395, 56] 
  },
  // 额头蓝点
  {
      fs:'#e5f8ef',
      type:'f',
      m:[190, 30],
      b:[180, 57, 216, 65, 218, 20],
      q:[203, 23, 190, 30]
  },
  {
      type:'f',
      m:[239, 15],
      b:[233, 70, 280, 60, 278, 11],
      q:[257, 11, 239, 15]
  },
  {
      type:'f',
      m:[304, 11],
      b:[285, 48, 329, 74, 339, 15],
      q:[322, 11, 304, 11]
  },
  {
      type:'f',
      m:[365, 20],
      b:[354, 47, 380, 53, 389, 28],
      q:[378, 23, 366, 20]
  },
  // 腮红
  {
      fs:'#ffcce6',
      type:'f',
      m:[110, 199],
      q0:[73, 179, 47, 198],
      b:[41, 204, 43, 211, 47, 215],
      q1:[73, 235, 120, 212]
  },
  {
      type:'f',
      m:[428, 200],
      q0:[470, 186, 507, 210],
      b:[519, 218, 514, 240, 497, 244],
      q1:[454, 256, 420, 227]
  },
  // 害羞 左
  {
      ss:'#361909',
      lw:6,
      type:'s',
      m0:[71, 205],
      l0:[65, 212],
      m1:[71, 205],
      b1:[75, 200, 74, 202, 71, 205],
      m2:[66, 211],
      b2:[63, 213, 62, 217, 66, 210],
      m3:[88, 205],
      l3:[82, 212],
      m4:[88, 205],
      b4:[90, 202, 91, 202, 88, 205],
      m5:[82, 212],
      b5:[80, 215, 78, 216, 82, 212]
  },
  // 害羞 右
  {
      type:'s',
      m0:[448, 218],
      l0:[443, 224],
      m1:[448, 218],
      b1:[452, 213, 454, 215, 444, 224],
      m2:[443, 224],
      b2:[441, 225, 439, 230, 444, 224],
      m3:[466, 218],
      l4:[460, 225],
      m4:[466, 219],
      b4:[468, 215, 469, 216, 465, 219],
      m5:[460, 225],
      b5:[455, 230, 455, 231, 460, 225],
      m6:[482, 220],
      l6:[475, 228],
      m7:[482, 221],
      b7:[484, 216, 484, 219, 481, 221],
      m8:[476, 227],
      b8:[472, 231, 472, 231, 476, 227]
  },
  // 眼睛
  {
      fs:"#35190d",
      type:'f',
      m:[129, 140],
      b0:[206, 118, 215, 204, 172, 226],
      b1:[92, 249, 85, 165, 129, 140]
  },
  {
      type:'f',
      m:[332, 154],
      b0:[421, 108, 462, 208, 407, 240],
      b1:[357, 279, 264, 214, 332, 154]
  },
  // 睫毛
  {
      ss:"#35190d",
      lw:6,
      type:'s',
      m:[129, 146],
      l:[129, 131]
  },
  {
      type:'s',
      m:[334, 156],
      l:[328, 146]
  },
  // 眼珠
  {
      fs:"#fff",
      type:'f',
      m:[177, 151],
      b0:[190, 152, 183, 166, 177, 164],
      b1:[168, 164, 168, 152, 177, 151]  
  },
  {
      type:'f',
      m:[393, 154],
      b0:[406, 155, 402, 171, 393, 169],
      b1:[384, 169, 382, 155, 393, 154] 
  },
  // 鼻子
  {
      fs:"#35190e",
      type:'f',
      m:[237, 220],
      b0:[237, 209, 254, 209, 254, 220],
      b1:[254, 231, 238, 231, 237, 220]  
  },
  {
      ss:'#35190e',
      lw:4,
      type:'s',
      m0:[218, 229],
      b0:[222, 241, 239, 243, 245, 226],
      m1:[219, 230],
      b1:[217, 228, 218, 228, 219, 230],
      m2:[245, 226],
      b2:[254, 245, 279, 244, 285, 234],
      m3:[285, 234],
      b3:[286, 232, 287, 232, 285, 234]
  },
  // 爱心
  {
      ss: "#33190c",
  fs: "#fe0000",
  lw: 10,
  type: 'fcs',
      m: [98, 376],
      b0:[70, 301, 156, 194, 246, 303],
      b1:[403, 197, 476, 345, 424, 402],
      q0:[375, 475, 260, 528],
      q1:[247, 536, 225, 526],
      q2:[130, 463, 98, 376]
  },
  {
  fs: "#ff334c",
  type: 'f',
      m: [109, 372],
      b0:[68, 240, 214, 226, 236, 326],
      q0:[297, 250, 384, 278],
      q1:[408, 288, 404, 316],
      q2:[380, 416, 263, 469],
      b1:[241, 480, 220, 470, 202, 464],
      q4:[118, 416, 109, 372]
  },
  // 手
  {
      ss: "#33190c",
  fs: "#fff",
  lw: 6,
  type: 'fcs',
      m: [98, 377],
      b0:[137, 367, 128, 417, 113, 415],
      b1:[97, 418, 74, 390, 98, 377]
  },
  {
      type: 'fcs',
      m: [390, 434],
      b0:[358, 407, 392, 366, 427, 388],
      q0:[416, 409, 393, 435]
  }
]  

function _drawPath(ctx, obj) {
  ctx.strokeStyle = obj.ss;
  ctx.fillStyle = obj.fs;
  ctx.lineWidth = obj.lw;

  // lineTo l l1 l2 ... ln
  const untils = {
    m: 'moveTo',
    l: 'lineTo',
    b: 'bezierCurveTo',
    q: 'quadraticCurveTo'
  }

  ctx.beginPath();
  for (let key in obj) {
    if (['ss', 'fs', 'lw', 'type'].includes(key)) continue;
    ctx[untils[key.slice(0, 1)]](...obj[key])
  }
  //  f s cs fs fcs
  if (obj.type.includes('f')) {
    // 填充
    ctx.fill();
  }
  if (obj.type.includes('c')) {
    // 闭合
    ctx.closePath();
  }
  if (obj.type.includes('s')) {
    // 描线
    ctx.stroke();
  }
}

// 沫墨上花开沁人香  小兰 即 兰开头的一句诗 剩下的诗句可以通用
Page({
  data: {
    poem: ["兰蓝天白云似绵糖","我握笔挥洒这八荒","喜溪流从天截取来","欢寰宇皆为房中梁","你霓裳为帘鸟语香","到稻禾青青似情长","永拥你在怀沐暖阳","远愿天比翼鸟飞翔"]
  },
  onLoad: function () {
    if(this.timer) clearInterval(this.timer);
    this.timer=setInterval(() => {
      const start=new Date("2020-09-28 00:08:00");//相识日期
      const timestamp=Date.now()-start.getTime();
      const oneday=24*3600*1000;
      const day=Math.floor(timestamp/oneday);
      const hour=Math.floor((timestamp%oneday)/(3600*1000));
      const min=Math.floor((timestamp%(3600*1000)/60000));
      const second=Math.floor((timestamp%60000)/1000);
      this.setData({
        day,
        hour,
        min,
        second
      })
    }, 1000);
    
    var ctx = wx.createCanvasContext('myCanvas')
    catArr.forEach((e,i) => {
      _drawPath(ctx, e)
    })
    ctx.draw()
  }
})
